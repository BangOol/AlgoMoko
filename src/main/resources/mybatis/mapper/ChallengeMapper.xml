<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.co.algomoko.challenge.mapper.ChallengeMapper">

	<!-- 챌린지 조회 -->
	<select id="getPage"
		resultType="com.co.algomoko.challenge.domain.ChallengeVO">
		select *
		from challenge
		where cno = #{cno}
		order by ctitle
	</select>
	
	<!-- 챌린지 목록 -->
	<select id="cList"
		resultType="com.co.algomoko.challenge.domain.ChallengeVO">
	<![CDATA[select *
		 	 from (select * from challenge
		 		   where ctitle like '%' || #{ctitle,jdbcType=VARCHAR} || '%'
		 		   order by ctitle)
			 where rownum <=10]]>
	</select>
	
	<!-- 챌린지 작성 -->
	<insert id="cInsert"
		parameterType="com.co.algomoko.challenge.domain.ChallengeVO">
		insert into challenge (cno, ctitle, ccon, cdday,
		filepath, filename)
		values(CNO.nextval, #{ctitle}, #{ccon}, #{cdday},
		#{filepath},
		#{filename})
	</insert>
	
	<!-- 챌린지 수정 -->
	<update id="cUpdate"
		parameterType="com.co.algomoko.challenge.domain.ChallengeVO">
		update  challenge
		   <set>  ctitle = #{ctitle}, 
				ccon = #{ccon},
				cdday = #{cdday}, 
			<if test = "filename != null and filename != ''">	
				filepath =	#{filepath}, 
				filename = #{filename}
			</if>
			</set>
		where	cno = #{cno}
	</update>
	
	<!-- 챌린지 삭제 -->
	<delete id="cDelete" parameterType="int">
		delete
		from challenge
		where cno
		= #{cno}
	</delete>
	
	<!-- 진행중인 챌린지 포기 -->
	<delete id="deleting" parameterType="map">
		delete
		from my_challenge
		where cno2 = #{cno2} and mid = #{mid} and ck = 0
	</delete>
	
	<!-- 진행중인 챌린지 추가 -->
	<insert id="mcInsert" parameterType="map">
		insert into my_challenge
		(mycno, cno2, mid, sdate, edate )
		values(mycno.nextval, #{cno}, #{mid},
		sysdate, sysdate+to_char(#{cdday}))
	</insert>
	
	<!--진행중인 챌린지 목록 -->
	<select id="mcList" parameterType="map"
		resultType="com.co.algomoko.challenge.domain.MyChallengeVO">
	<![CDATA[select *
			 from challenge a, my_challenge b 
			 where a.cno = b.cno2 and b.mid = #{mid} and b.ck=0 and to_date(b.edate,'yyyy-mm-dd') > to_date(sysdate,'yyyy-mm-dd')]]>		 
	</select>
	
	<!-- 완료한 챌린지 목록 -->
	<select id="eList" resultType="com.co.algomoko.challenge.domain.MyChallengeVO">
	<![CDATA[select *
			 from challenge a, my_challenge b
			 where (a.cno = b.cno2 and b.mid = #{mid} and ck=1)
			 	or (a.cno = b.cno2 and b.mid = #{mid} and to_date(b.edate,'yyyy-mm-dd') < sysdate)]]>
	</select>
	
	<!-- 챌린지 간소화인증 이동 -->
	<select id="getd" resultType="com.co.algomoko.challenge.domain.MyChallengeVO">
		select *
		from my_challenge
		where cno2 = #{cno2} and mid = #{mid} and ck =0  and mycno = #{mycno}
	</select>

	<!-- 챌린지 인증 -->
	<insert id="valid" parameterType="map">
		insert into
		challenge_validation (cvno, cno3, cvdate, round, attyn, vcon, mid, mycno)
		values(cvno.nextval, #{cno}, to_date(sysdate,'yyyy-mm-dd'), #{round}, '1', #{vcon}, #{mid}, #{mycno})
	</insert>

	<!-- 오늘 일차 구하기 -->
	<select id="getRound" parameterType="map" resultType="integer">
		select
		(to_date(sysdate, 'yyyy-mm-dd')-to_date(a.sdate, 'YYYY-MM-DD')) +1
		from my_challenge a, challenge b
		where a.cno2 = b.cno and a.mycno = #{mycno} and a.mid =#{mid}
	</select>

	<!-- 인증 갯수 구하기 -->
	<select id="getCertiCount" parameterType="map" resultType="int">
		select count(*)
		from challenge_validation
		where cno3 = #{cno} and mid = #{mid} and mycno= #{mycno}
	</select>

	<!-- 이행률 업데이트 -->
	<update id="cperUpdate" parameterType="map">
		update my_challenge
		set
		cper = #{cper}, round = #{round}
		where cno2 = #{cno} and mid = #{mid} and ck=0 and mycno= #{mycno}
	</update>
	<!-- ck 업데이트 -->
	<update id="ck" parameterType="map">
		update my_challenge
		set ck = 1
		where cno2 =#{cno} and mid=#{mid} and mycno= #{mycno}
	</update>
	<!-- 마지막 인증 일자 -->
	<select id="getLastRound" resultType="Integer">
	select round
	from my_challenge
	where mycno = #{mycno} and mid = #{mid}
	</select>
	
	<!-- 페이징 -->
	<select id="fListPage" resultType="hashmap">
		select  ctitle "ctitle",
				ccon "ccon",
				cdday "cdday",
				filepath "filepath"
		from(
			select row_number() over(order by ctitle asc) as row_num,
					ctitle,
					ccon,
					cdday,
					filepath
			from challenge
			order by ctitle asc
			)
		 <if test="firstRecordIndex !=null and lastRecordIndex != null">
            WHERE row_num BETWEEN #{firstRecordIndex} AND #{lastRecordIndex}
        </if>
	</select>
	<!-- 테이블 로우 개수 -->
	<select id="TableCount" resultType="int" parameterType="com.co.algomoko.challenge.domain.ChallengeVO">
		select count(*)
		from challenge		
	</select>

</mapper>