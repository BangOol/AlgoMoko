<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.co.algomoko.challenge.mapper.ChallengeMapper">

	<!-- 챌린지 조회 -->
	<select id="getPage"
		resultType="com.co.algomoko.challenge.domain.ChallengeVO">
		select *
		from challenge
		where cno = #{cno}
		order by ctitle
	</select>
	
	<!-- 챌린지 목록 -->
	<select id="cList"
		resultType="com.co.algomoko.challenge.domain.ChallengeVO">
	<![CDATA[select *
		 	 from (select * from challenge
		 		   where ctitle like '%' || #{ctitle,jdbcType=VARCHAR} || '%'
		 		   order by ctitle)
			 where rownum <=6]]>
	</select>
	
	<!-- 챌린지 작성 -->
	<insert id="cInsert"
		parameterType="com.co.algomoko.challenge.domain.ChallengeVO">
		insert into challenge (cno, ctitle, ccon, cdday,
		filepath, filename)
		values(CNO.nextval, #{ctitle}, #{ccon}, #{cdday},
		#{filepath},
		#{filename})
	</insert>
	
	<!-- 챌린지 수정 -->
	<update id="cUpdate"
		parameterType="com.co.algomoko.challenge.domain.ChallengeVO">
		update challenge
		set ctitle = #{ctitle}, ccon = #{ccon},
		cdday = #{cdday}, filepath =
		#{filepath}, filename = #{filename}
		where
		cno = #{cno}
	</update>
	
	<!-- 챌린지 삭제 -->
	<delete id="cDelete" parameterType="int">
		delete
		from challenge
		where cno
		= #{cno}
	</delete>
	
	<!-- 진행중인 챌린지 포기 -->
	<delete id="deleting" parameterType="map">
		delete
		from my_challenge
		where cno2 = #{cno2} and mid = #{mid} and ck = 0
	</delete>
	
	<!-- 진행중인 챌린지 추가 -->
	<insert id="mcInsert" parameterType="map">
		insert into my_challenge
		(mycno, cno2, mid, sdate, edate )
		values(mycno.nextval, #{cno}, #{mid},
		sysdate, sysdate+#{cdday})
	</insert>
	
	<!--진행중인 챌린지 목록 -->
	<select id="mcList"
		resultType="com.co.algomoko.challenge.domain.MyChallengeVO">
	<![CDATA[select *
			 from challenge a, my_challenge b 
			 where (a.cno = b.cno2 and b.mid = #{mid} and ck=0 and b.cper < 100 and b.edate > sysdate) ]]>
	</select>
	
	<!-- 완료한 챌린지 목록 -->
	<select id="eList"
		resultType="com.co.algomoko.challenge.domain.MyChallengeVO">
	<![CDATA[select *
			 from challenge a, my_challenge b
			 where a.cno = b.cno2 and b.mid = #{mid} and ck=1 and b.cper >= 100 or b.edate <= sysdate]]>
	</select>
	
	<!-- 챌린지 간소화인증 이동 -->
	<select id="getd" resultType="com.co.algomoko.challenge.domain.MyChallengeVO" parameterType="map">
		select *
		from my_challenge
		where cno2 = #{cno2} and mid = #{mid} and ck =0  and mycno = #{mycno}
	</select>

	<!-- 챌린지 간소화인증 -->
	<insert id="valid" parameterType="map">
		insert into
		challenge_validation (cvno, cno3, cvdate, round, attyn, vcon, mid)
		values(cvno.nextval, #{cno}, to_date(sysdate,'yyyy-mm-dd'), #{round}, '1', #{vcon}, #{mid})
	</insert>

	<!-- 오늘 일차 구하기 -->
	<select id="getRound" parameterType="map" resultType="int">
		select
		ceil(to_date(sysdate, 'yyyy-mm-dd')-to_date(a.sdate, 'YYYY-MM-DD'))
		from my_challenge a, challenge b
		where a.cno2 = b.cno and a.cno2 = #{cno} and a.mid =#{mid}
	</select>

	<!-- 인증 갯수 구하기 -->
	<select id="getCertiCount" parameterType="map" resultType="int">
		select count(*)
		from challenge_validation
		where cno3 = #{cno} and mid = #{mid}
	</select>

	<!-- 이행률 업데이트 -->
	<update id="cperUpdate" parameterType="map">
		update my_challenge
		set
		cper = #{cper}
		where cno2 = #{cno} and mid = #{mid} and ck=0
	</update>

	<!-- 인증 중복 체크 -->
	<select id="getDup" parameterType="map">
		select to_date(#{cvdate},'yyyy-mm-dd')-to_date(sysdate,'yyyy-mm-dd')
		from challenge_validation
		where cno3=#{cno} and mid=#{mid}
	</select>

	<!-- ck 업데이트 -->
	<update id="ck" parameterType="map">
		update my_challenge
		set ck = 1
		where cno2 =#{cno} and mid=#{mid}
	</update>


</mapper>