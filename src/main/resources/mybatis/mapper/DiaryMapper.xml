<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 위 코드가 mapper 설정을 하는 코드 -->

<!-- Mapper를 사용하는 Repository의 전체 경로를 적어줘야함. -->
<mapper namespace="com.co.algomoko.diary.mapper.DiaryMapper">
<!-- 해당날짜 식단 조회 --> 
<select id="findDay" resultType="DiaryVO">
select b.mid, a.ddname,a.dddo,a.amount, a.cal, a.carb, a.prot, a.fat, trunc(a.ddate) as ddate, to_char(a.ddate, 'day') as dday, b.ucon
from diary_detail a, diary b
where TO_CHAR(a.ddate,'iw')  =TO_CHAr(to_date(sysdate,'yy-MM-dd'),'iw') and a.dddo=b.dddo and a.mid = b.mid and TRUNC(a.ddate) = trunc(b.ddate) and b.mid = #{mid}

</select>
<select id="sicDay" resultType="DiaryVO">
select b.mid, a.ddname,a.dddo,a.amount, a.cal, a.carb, a.prot, a.fat, trunc(a.ddate) as ddate, to_char(a.ddate, 'day') as dday, b.ucon
from diary_detail a, diary b
where TO_CHAR(a.ddate,'iw')  =TO_CHAr(to_date(sysdate,'yy-MM-dd'),'iw') and a.dddo=b.dddo and a.mid = b.mid and TRUNC(a.ddate) = trunc(b.ddate) and trunc(#{ddate})=TRUNC(a.ddate) and b.mid = #{mid}
order by b.ucon
</select>
<!-- 총 칼로리 -->
<select id="resultCal" resultType="DiaryVO">
select trunc(a.ddate) as ddate, a.mid, sum(b.cal) as sumcal, to_char(a.ddate, 'day') as dday , sum(b.carb) as carb, sum(b.prot) as prot, sum(b.fat) fat
from diary a,diary_detail b
where TO_CHAR(a.ddate,'iw')  =TO_CHAr(to_date(sysdate,'yy-MM-dd'),'iw') and a.dddo=b.dddo and a.mid = b.mid and TRUNC(a.ddate) = trunc(b.ddate) and to_char(#{ddate},'yyyy-mm-dd')=to_char(a.ddate,'yyyy-mm-dd') and b.mid = #{mid}
   GROUP BY a.ddate, a.mid
</select>
<select id="resultCal1" resultType="DiaryVO2">
SELECT
    * FROM diary_detail where mid='exex'

</select>

<select id="detail" resultType="DiaryVO">
select b.mid, a.ddname,a.dddo,a.amount, a.cal, a.carb, a.prot, a.fat, trunc(a.ddate) as ddate, to_char(a.ddate, 'day') as dday, b.ucon
from diary_detail a, diary b
where TO_CHAR(a.ddate,'iw')  =TO_CHAr(to_date(sysdate,'yy-MM-dd'),'iw') and a.dddo=b.dddo and a.mid = b.mid and TRUNC(a.ddate) = trunc(b.ddate) and to_char(#{ddate,jdbcType=DATE},'yyyy-mm-dd')=to_char(a.ddate,'yyyy-mm-dd') and b.mid = #{mid} and a.dddo=#{dddo}
order by b.ucon
</select>


<select id="con" resultType="DiaryVO">
select ucon
from diary
where mid= #{mid} and TRUNC(ddate) = trunc(#{ddate}) and dddo=#{dddo}
</select>
<!-- 주간칼로리 -->
<select id="jukcal" resultType="DiaryVO">
select trunc(a.ddate) as ddate, a.mid, sum(b.cal) as sumcal, to_char(a.ddate, 'day') as dday
from diary a,diary_detail b
where TO_CHAR(a.ddate,'iw')  =TO_CHAr(to_date(sysdate,'yy-MM-dd'),'iw') and a.dddo=b.dddo and a.mid = b.mid and TRUNC(a.ddate) = trunc(b.ddate) and b.mid = #{mid}
   GROUP BY a.ddate, a.mid
</select>

<select id="insertdetail">
insert into diary_detail 
values(DIARY_DETAIL_SEQ.nextval,TRUNC(#{ddate}),#{mid},#{dddo},null,#{ddname},#{amount},null,#{cal},#{carb},#{prot},#{fat})

</select>

<select id="insert">
insert into diary
 values(DIARY_SEQ.nextval,#{ucon},null,TRUNC(#{ddate}),#{mid},#{dddo}
 )
</select>

<select id="custom" resultType="DiaryVO">
select b.mid, a.ddname,a.dddo,a.amount, a.cal, a.carb, a.prot, a.fat, trunc(a.ddate) as ddate, to_char(a.ddate, 'day') as dday, b.ucon
from diary_detail a, diary b
where TO_CHAR(a.ddate,'iw')  =TO_CHAr(to_date(sysdate,'yy-MM-dd'),'iw') and a.dddo=b.dddo and a.mid = b.mid and TRUNC(a.ddate) = trunc(b.ddate) and trunc(#{ddate})=TRUNC(a.ddate) and b.mid =#{mid}
order by b.ucon
</select>

<select id="rerank" resultType="recipeVO">
select*from recipe where mid = 'admin'
</select>

	<select id="fonlist"
		resultType="DiaryVO">
		select ddname, amount, cal, carb, prot, fat
		from food
		where
		ddname = #{ddname}
	</select>

<select id="diaryde" resultType="DiaryVO">
delete diary
where mid=#{mid} and TRUNC(ddate) = trunc(#{ddate}) and dddo=#{dddo}
</select>
<select id="detade" resultType="DiaryVO">
delete diary_detail
where mid=#{mid} and TRUNC(ddate) = trunc(#{ddate}) and dddo=#{dddo}
</select>


<select id="rlist" resultType="RecipeVO">
select*from recipe where mid=#{mid}
</select>

<select id="onelist" resultType="RecipeVO">
select*from recipe where mid=#{mid} and rname=#{rname}
</select>

<select id="redetail" resultType="RecipeVO">
select*from recipe_ing where rname=#{rname} and mid = #{mid}
</select>

<select id="tcal" resultType="int">
select tcal from members where mid=#{mid}	
</select>

<select id="tomem" resultType="string">
select nick from members where mid=#{mid}	
</select>

<select id="reinsert">
insert into recipe values(
RECIPE_SEQ.nextval, #{rname},#{nick},#{cal},#{amount},#{carb},#{prot},#{rfat},#{rrecipe},#{mid},null,0
)
</select>
<select id="redeinsert">
insert into recipe_ing values(
#{fing},RECIPE_ING_SEQ.nextval,null,#{rname},#{mid},null,#{cal},#{aamount}
)
</select>

<select id="redelete">
delete recipe
where mid = #{mid} and rname = #{rname}
</select>

<select id="rededelete">
delete recipe_ing
where mid = #{mid} and rname = #{rname}
</select>

<select id="reexli" resultType="RecipeVO">
select*from recipe where rname =#{rname}
</select>

     <select id="myrecipelist" resultType="hashmap">
        SELECT *
        FROM (
        SELECT ROW_NUMBER() OVER(ORDER BY rname DESC) AS
        ROW_NUM
        ,rname
        ,cal
        ,carb
        ,prot
        ,rfat
        ,rrecipe
        ,amount
        ,mid
        FROM recipe
        WHERE mid=#{mid}
        )
        <if test="firstRecordIndex != null and lastRecordIndex != null">
            where ROW_NUM BETWEEN #{firstRecordIndex} AND
            #{lastRecordIndex}
        </if>
       
    </select>
<select id="TableCount" resultType="int">
        SELECT count(*) FROM
            recipe where mid=#{mid}
    </select>
</mapper>